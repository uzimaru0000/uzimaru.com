{
	"new command": {
        "scope": "elm",
		"prefix": "command",
		"body": [
			"module Command.$1 exposing (..)",
			"",
			"import Parser exposing (Parser, (|.), (|=))",
			"import Utils",
			"import Command.Help exposing (HelpInfo(..))",
			"import Command.State exposing (ProcState)",
			"import Html exposing (Html)",
			"",
			"",
			"type $1 = $1 Args",
			"",
			"",
			"type alias Args = {}",
			"",
			"",
			"type alias Flags = ()",
			"",
			"",
			"type alias Proc = {}",
			"",
			"",
			"type Msg = NoOp",
			"",
			"",
			"parser : Parser $1",
			"parser =",
			"    Parser.succeed $1",
			"        |. Parser.keyword \"$2\"",
			"        |. Parser.spaces",
			"        |= argsParser {}",
			"",
			"",
			"argsParser : Args -> Parser Args",
			"argsParser =",
			"    Utils.argsParser <|",
			"        \\default ->",
			"            Parser.oneOf []",
			"",
			"", 
			"info : HelpInfo",
			"info =",
			"    HelpInfo",
			"        { name = \"$2\", info = \"\", detailInfo = [] }",
			"",
			"",
			"init : Args -> Flags -> (ProcState Proc, Cmd Msg)",
			"init args _ =",
			"    ( Command.State.Exit {}, Cmd.none )",
			"",
			"",
			"run : Msg -> Proc -> (ProcState Proc, Cmd Msg)",
			"run msg proc =",
			"    ( Command.State.Exit {}, Cmd.none )",
			"",
			"",
			"view : Proc -> Html Msg",
			"view proc =",
			"    Html.div [] [ Html.text \"$2\" ]",
			"",
			"",
			"subscriptions : Proc -> Sub Msg",
			"subscriptions _ =",
			"    Sub.none",
		],
		"description": "Create new command"
	}
}